CREATE VERTEX Identities(PRIMARY_ID id STRING, id STRING, uuid STRING, platform STRING, identity STRING, display_name STRING, profile_url STRING, avatar_url STRING, created_at DATETIME, added_at DATETIME, updated_at DATETIME, uid STRING, expired_at DATETIME, reverse BOOL) WITH STATS="OUTDEGREE_BY_EDGETYPE"
CREATE VERTEX Contracts(PRIMARY_ID id STRING, id STRING, uuid STRING, category STRING, address STRING, chain STRING, symbol STRING, updated_at DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE"
CREATE DIRECTED EDGE Proof_Forward(FROM Identities, TO Identities, DISCRIMINATOR(source STRING), created_at DATETIME, uuid STRING, level INT, record_id STRING, updated_at DATETIME, fetcher STRING) WITH REVERSE_EDGE="Proof_Backward"
CREATE DIRECTED EDGE Hold_Identity(FROM Identities, TO Identities, DISCRIMINATOR(source STRING), uuid STRING, transaction STRING, id STRING, created_at DATETIME, updated_at DATETIME, fetcher STRING, expired_at DATETIME)
CREATE DIRECTED EDGE Hold_Contract(FROM Identities, TO Contracts, DISCRIMINATOR(source STRING, transaction STRING, id STRING), uuid STRING, created_at DATETIME, updated_at DATETIME, fetcher STRING, expired_at DATETIME)
CREATE DIRECTED EDGE Resolve(FROM Identities, TO Identities, DISCRIMINATOR(source STRING, system STRING, name STRING), uuid STRING, updated_at DATETIME, fetcher STRING)
CREATE DIRECTED EDGE Reverse_Resolve(FROM Identities, TO Identities, DISCRIMINATOR(source STRING, system STRING, name STRING), uuid STRING, updated_at DATETIME, fetcher STRING)
CREATE DIRECTED EDGE Resolve_Contract(FROM Contracts, TO Identities, DISCRIMINATOR(source STRING, system STRING, name STRING), uuid STRING, updated_at DATETIME, fetcher STRING)
CREATE DIRECTED EDGE Reverse_Resolve_Contract(FROM Identities, TO Contracts, DISCRIMINATOR(source STRING, system STRING, name STRING), uuid STRING, updated_at DATETIME, fetcher STRING)
CREATE DIRECTED EDGE Relation_Unique_TX(FROM Identities, TO Identities, tx_count INT, tx_sum INT, tx_max INT, tx_min INT, updated_at DATETIME)
CREATE DIRECTED EDGE Relation_TX(FROM Identities, TO Identities, DISCRIMINATOR(transaction_hash STRING), transaction_index INT, tx_type INT, tx_status INT, block_hash INT, block_number UINT, block_timestamp DATETIME, from_address STRING, to_address STRING, tx_value UINT, contract_address STRING, updated_at DATETIME)
CREATE DIRECTED EDGE Social_Feed(FROM Identities, TO Identities, source STRING, action STRING, action_count INT, updated_at DATETIME)
CREATE VERTEX IdentitiesGraph(PRIMARY_ID id STRING, id STRING, updated_nanosecond INT)
CREATE DIRECTED EDGE PartOfIdentitiesGraph(FROM Identities, TO IdentitiesGraph) WITH REVERSE_EDGE="PartOfIdentitiesGraph_Reverse"
CREATE DIRECTED EDGE Follow(FROM IdentitiesGraph, TO IdentitiesGraph, DISCRIMINATOR(original_from STRING, original_to STRING, source STRING), updated_at DATETIME)
